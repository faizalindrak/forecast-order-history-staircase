// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SKU {
  id        String   @id @default(cuid())
  partNumber String  @unique
  partName   String
  order      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  forecastEntries ForecastEntry[]
  shipTos         ShipTo[]
}

model ForecastVersion {
  id        String   @id @default(cuid())
  month     DateTime
  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entries   ForecastEntry[]

  @@unique([month, version])
  @@index([month, version])
}

model ForecastEntry {
  id                String   @id @default(cuid())
  forecastVersionId String
  skuId             String
  shipToId          String?
  orderMonth        DateTime
  value             Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  forecastVersion ForecastVersion @relation(fields: [forecastVersionId], references: [id], onDelete: Cascade)
  sku             SKU             @relation(fields: [skuId], references: [id], onDelete: Cascade)
  shipTo          ShipTo?         @relation(fields: [shipToId], references: [id], onDelete: SetNull)

  @@unique([forecastVersionId, skuId, shipToId, orderMonth])
  @@index([skuId, orderMonth])
  @@index([shipToId])
}

model ShipTo {
  id        String   @id @default(cuid())
  skuId     String
  code      String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sku             SKU             @relation(fields: [skuId], references: [id], onDelete: Cascade)
  forecastEntries ForecastEntry[]

  @@unique([skuId, code])
  @@index([code])
}